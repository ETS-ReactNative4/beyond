/************
Processor: ts
************/

// FILE: renderWidget.d.ts
declare namespace ns_renderWidget {
    function renderWidget(element: string, props?: Record<string, any>): Promise<{
        html: string;
        errors: string[];
        css: string;
    } | {
        errors: any;
        html?: undefined;
        css?: undefined;
    }>;
}

// FILE: renderer.d.ts
declare namespace ns_renderer {
    interface IWidgetRendered {
        html?: string;
        errors?: string[];
        css?: string;
    }
    interface IPageRendered {
        errors?: string[];
        warnings?: string[];
        redirected?: string;
        hierarchy?: string[];
        widgets?: [
            string,
            IWidgetRendered
        ][];
        exception?: Error;
    }
    const renderer: {
        render(_uri: string): Promise<IPageRendered>;
    };
}

export import renderer = ns_renderer.renderer;


export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };/************
Processor: ts
************/

// FILE: renderWidget.d.ts
declare namespace ns_renderWidget {
    function renderWidget(element: string, props?: Record<string, any>): Promise<{
        html: string;
        errors: string[];
        css: string;
    } | {
        errors: any;
        html?: undefined;
        css?: undefined;
    }>;
}

// FILE: renderer.d.ts
declare namespace ns_renderer {
    interface IWidgetRendered {
        html?: string;
        errors?: string[];
        css?: string;
    }
    interface IPageRendered {
        errors?: string[];
        warnings?: string[];
        redirected?: string;
        hierarchy?: string[];
        widgets?: [
            string,
            IWidgetRendered
        ][];
        exception?: Error;
    }
    const renderer: {
        render(_uri: string): Promise<IPageRendered>;
    };
}

export import renderer = ns_renderer.renderer;


export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };